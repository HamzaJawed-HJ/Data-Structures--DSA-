package com.company;

public class Main {

    public static void main(String[] args) {
        char array[] = {'a', 'b',  'c', 'd',  'e'};
        int index1 = TernarySearch3(array , 'a', 0, array.length);
        if (index1 != -1){
            System.out.println("Value found at index:"+index1);
        }
        else {
            System.out.println("Value not found !");
        }
    }

    public static int TernarySearch(int[] array, int target,int left,int right){
        if (left > right){
            return -1;
        }
        int partionsize = (right - left)/3;
        int mid1 = left + partionsize;
        int mid2 = right - partionsize;
        if (array[mid1] == target){
            return mid1;
        }
        if (array[mid2] == target){
            return mid2;
        }
        if (target < array[mid1]){
            return TernarySearch(array , target , left , mid1-1);
        }
        if (target > array[mid2]){
            return TernarySearch(array , target , mid1+1 , right);
        }
        else {
            return TernarySearch(array , target , mid1+1 , mid2-1);
        }
    }

    public static int TernarySearch2(float[] array, float target,int left,int right){
        if (left > right){
            return -1;
        }
        int partionsize = (right - left)/3;
        int mid1 = left + partionsize;
        int mid2 = right - partionsize;
        if (array[mid1] == target){
            return mid1;
        }
        if (array[mid2] == target){
            return mid2;
        }
        if (target < array[mid1]){
            return TernarySearch2(array , target , left , mid1-1);
        }
        if (target > array[mid2]){
            return TernarySearch2(array , target , mid1+1 , right);
        }
        else {
            return TernarySearch2(array , target , mid1+1 , mid2-1);
        }
    }

    public static int TernarySearch3(char[] array, char target,int left,int right){
        if (left > right){
            return -1;
        }
        int partionsize = (right - left)/3;
        int mid1 = left + partionsize;
        int mid2 = right - partionsize;
        if (array[mid1] == target){
            return mid1;
        }
        if (array[mid2] == target){
            return mid2;
        }
        if (target < array[mid1]){
            return TernarySearch3(array , target , left , mid1-1);
        }
        if (target > array[mid2]){
            return TernarySearch3(array , target , mid1+1 , right);
        }
        else {
            return TernarySearch3(array , target , mid1+1 , mid2-1);
        }
    }
}






